{
   "Parameters" : {
      "AvailabilityZoneB" : {
         "Type" : "String",
         "Description" : "Must be a valid Availability Zone"
      },
      "KeyName" : {
         "Type" : "AWS::EC2::KeyPair::KeyName",
         "ConstraintDescription" : "Must be a valid keyname"
      },
      "AvailabilityZoneA" : {
         "Description" : "Must be a valid Availability Zone",
         "Type" : "String"
      }
   },
   "Resources" : {
      "NatGatewayA" : {
         "Type" : "AWS::EC2::NatGateway",
         "Properties" : {
            "AllocationId" : {
               "Fn::GetAtt" : [
                  "NatEipA",
                  "AllocationId"
               ]
            },
            "SubnetId" : {
               "Ref" : "PublicSubnetA"
            }
         }
      },
      "BastionHostEIP" : {
         "Properties" : {
            "Domain" : "VPC"
         },
         "Type" : "AWS::EC2::EIP"
      },
      "PublicSubnetA" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "AvailabilityZone" : {
               "Ref" : "AvailabilityZoneA"
            },
            "CidrBlock" : "10.0.1.0/24",
            "VpcId" : {
               "Ref" : "VPC"
            }
         }
      },
      "PrivateSubnetA" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "CidrBlock" : "10.0.0.0/24",
            "AvailabilityZone" : {
               "Ref" : "AvailabilityZoneA"
            },
            "VpcId" : {
               "Ref" : "VPC"
            }
         }
      },
      "PrivateRouteA" : {
         "Type" : "AWS::EC2::Route",
         "DependsOn" : [
            "NatGatewayA",
            "PrivateRouteTableA"
         ],
         "Properties" : {
            "RouteTableId" : {
               "Ref" : "PrivateRouteTableA"
            },
            "NatGatewayId" : {
               "Ref" : "NatGatewayA"
            },
            "DestinationCidrBlock" : "0.0.0.0/0"
         }
      },
      "NatEipB" : {
         "Properties" : {
            "Domain" : "VPC"
         },
         "Type" : "AWS::EC2::EIP"
      },
      "BastionSecurityGroup" : {
         "Properties" : {
            "SecurityGroupEgress" : {
               "FromPort" : "0",
               "ToPort" : "10000",
               "IpProtocol" : "tcp",
               "CidrIp" : "0.0.0.0/0"
            },
            "VpcId" : {
               "Ref" : "VPC"
            },
            "GroupDescription" : "Allow SSH traffic to bastion host",
            "SecurityGroupIngress" : [
               {
                  "FromPort" : "22",
                  "ToPort" : "22",
                  "IpProtocol" : "tcp",
                  "CidrIp" : "0.0.0.0/0"
               },
               {
                  "FromPort" : "8123",
                  "ToPort" : "8123",
                  "IpProtocol" : "-1",
                  "CidrIp" : "0.0.0.0/0"
               }
            ]
         },
         "Type" : "AWS::EC2::SecurityGroup"
      },
      "InternetGateway" : {
         "Type" : "AWS::EC2::InternetGateway",
         "DependsOn" : [
            "VPC",
            "PublicRouteTable"
         ]
      },
      "PrivateRouteTableA" : {
         "Properties" : {
            "VpcId" : {
               "Ref" : "VPC"
            }
         },
         "Type" : "AWS::EC2::RouteTable"
      },
      "PublicSubnetB" : {
         "Properties" : {
            "VpcId" : {
               "Ref" : "VPC"
            },
            "AvailabilityZone" : {
               "Ref" : "AvailabilityZoneB"
            },
            "CidrBlock" : "10.0.3.0/24"
         },
         "Type" : "AWS::EC2::Subnet"
      },
      "BastionHostEIPAssociation" : {
         "Type" : "AWS::EC2::EIPAssociation",
         "DependsOn" : [
            "BastionHostEIP",
            "BastionHost"
         ],
         "Properties" : {
            "AllocationId" : {
               "Fn::GetAtt" : [
                  "BastionHostEIP",
                  "AllocationId"
               ]
            },
            "InstanceId" : {
               "Ref" : "BastionHost"
            }
         }
      },
      "VPCGatewayAttachment" : {
         "DependsOn" : [
            "VPC",
            "InternetGateway"
         ],
         "Type" : "AWS::EC2::VPCGatewayAttachment",
         "Properties" : {
            "InternetGatewayId" : {
               "Ref" : "InternetGateway"
            },
            "VpcId" : {
               "Ref" : "VPC"
            }
         }
      },
      "BastionHost" : {
         "Type" : "AWS::EC2::Instance",
         "Properties" : {
            "KeyName" : {
               "Ref" : "KeyName"
            },
            "SecurityGroupIds" : [
               {
                  "Ref" : "BastionSecurityGroup"
               }
            ],
            "ImageId" : "ami-6869aa05",
            "InstanceType" : "t2.micro",
            "SubnetId" : {
               "Ref" : "PublicSubnetA"
            }
         }
      },
      "PublicSubnetRouteTableAssociationB" : {
         "Type" : "AWS::EC2::SubnetRouteTableAssociation",
         "Properties" : {
            "SubnetId" : {
               "Ref" : "PublicSubnetB"
            },
            "RouteTableId" : {
               "Ref" : "PublicRouteTable"
            }
         }
      },
      "PrivateRouteTableB" : {
         "Properties" : {
            "VpcId" : {
               "Ref" : "VPC"
            }
         },
         "Type" : "AWS::EC2::RouteTable"
      },
      "PrivateSubnetB" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "AvailabilityZone" : {
               "Ref" : "AvailabilityZoneB"
            },
            "CidrBlock" : "10.0.2.0/24",
            "VpcId" : {
               "Ref" : "VPC"
            }
         }
      },
      "PublicRouteTable" : {
         "Properties" : {
            "VpcId" : {
               "Ref" : "VPC"
            }
         },
         "Type" : "AWS::EC2::RouteTable",
         "DependsOn" : "VPC"
      },
      "SecurityGroup" : {
         "Properties" : {
            "VpcId" : {
               "Ref" : "VPC"
            },
            "GroupDescription" : "App Server Security Group",
            "SecurityGroupIngress" : [
               {
                  "IpProtocol" : "tcp",
                  "CidrIp" : "10.0.0.0/16",
                  "FromPort" : "22",
                  "ToPort" : "22"
               },
               {
                  "CidrIp" : "10.0.0.0/16",
                  "IpProtocol" : "tcp",
                  "ToPort" : "5432",
                  "FromPort" : "5432"
               },
               {
                  "ToPort" : "80",
                  "FromPort" : "80",
                  "CidrIp" : "10.0.0.0/16",
                  "IpProtocol" : "tcp"
               },
               {
                  "FromPort" : "6379",
                  "ToPort" : "6379",
                  "IpProtocol" : "tcp",
                  "CidrIp" : "10.0.0.0/16"
               }
            ]
         },
         "Type" : "AWS::EC2::SecurityGroup"
      },
      "NatGatewayB" : {
         "Properties" : {
            "SubnetId" : {
               "Ref" : "PublicSubnetB"
            },
            "AllocationId" : {
               "Fn::GetAtt" : [
                  "NatEipB",
                  "AllocationId"
               ]
            }
         },
         "Type" : "AWS::EC2::NatGateway"
      },
      "PrivateSubnetRouteTableAssociationB" : {
         "Properties" : {
            "SubnetId" : {
               "Ref" : "PrivateSubnetB"
            },
            "RouteTableId" : {
               "Ref" : "PrivateRouteTableB"
            }
         },
         "Type" : "AWS::EC2::SubnetRouteTableAssociation"
      },
      "PrivateRouteB" : {
         "Properties" : {
            "NatGatewayId" : {
               "Ref" : "NatGatewayB"
            },
            "RouteTableId" : {
               "Ref" : "PrivateRouteTableB"
            },
            "DestinationCidrBlock" : "0.0.0.0/0"
         },
         "Type" : "AWS::EC2::Route",
         "DependsOn" : [
            "NatGatewayB",
            "PrivateRouteTableB"
         ]
      },
      "PrivateSubnetRouteTableAssociationA" : {
         "Type" : "AWS::EC2::SubnetRouteTableAssociation",
         "Properties" : {
            "RouteTableId" : {
               "Ref" : "PrivateRouteTableA"
            },
            "SubnetId" : {
               "Ref" : "PrivateSubnetA"
            }
         }
      },
      "VPC" : {
         "Properties" : {
            "CidrBlock" : "10.0.0.0/16",
            "EnableDnsSupport" : "true",
            "EnableDnsHostnames" : "true"
         },
         "Type" : "AWS::EC2::VPC"
      },
      "PublicRoute" : {
         "Properties" : {
            "GatewayId" : {
               "Ref" : "InternetGateway"
            },
            "RouteTableId" : {
               "Ref" : "PublicRouteTable"
            },
            "DestinationCidrBlock" : "0.0.0.0/0"
         },
         "Type" : "AWS::EC2::Route",
         "DependsOn" : [
            "VPCGatewayAttachment",
            "InternetGateway",
            "PublicRouteTable"
         ]
      },
      "PublicSubnetRouteTableAssociationA" : {
         "Type" : "AWS::EC2::SubnetRouteTableAssociation",
         "Properties" : {
            "SubnetId" : {
               "Ref" : "PublicSubnetA"
            },
            "RouteTableId" : {
               "Ref" : "PublicRouteTable"
            }
         }
      },
      "NatEipA" : {
         "Properties" : {
            "Domain" : "VPC"
         },
         "Type" : "AWS::EC2::EIP"
      }
   },
   "Outputs" : {
      "PrivateSubnetA" : {
         "Description" : "Private EC2 Instance Subnet 1",
         "Value" : {
            "Ref" : "PrivateSubnetA"
         }
      },
      "KeyName" : {
         "Description" : "EC2 Keyname to Access Bastion Host",
         "Value" : {
            "Ref" : "KeyName"
         }
      },
      "PublicSubnetA" : {
         "Description" : "Public ELB Subnet 1",
         "Value" : {
            "Ref" : "PublicSubnetA"
         }
      },
      "BastionHostEIP" : {
         "Description" : "Bastion Host IP Address",
         "Value" : {
            "Ref" : "BastionHostEIP"
         }
      },
      "PrivateSubnetB" : {
         "Value" : {
            "Ref" : "PrivateSubnetB"
         },
         "Description" : "Private EC2 Instance Subnet 2"
      },
      "SecurityGroupId" : {
         "Description" : "Main VPC Security Group id",
         "Value" : {
            "Ref" : "SecurityGroup"
         }
      },
      "PublicSubnetB" : {
         "Description" : "Public EC2 Instance Subnet 2",
         "Value" : {
            "Ref" : "PublicSubnetB"
         }
      },
      "BastionHostId" : {
         "Description" : "Bastion Host Logical Id",
         "Value" : {
            "Ref" : "BastionHost"
         }
      },
      "VPC" : {
         "Description" : "VPC id",
         "Value" : {
            "Ref" : "VPC"
         }
      }
   },
   "AWSTemplateFormatVersion" : "2010-09-09"
}
