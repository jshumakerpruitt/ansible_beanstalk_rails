{
   "Resources" : {
      "PrivateSubnet1c" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "AvailabilityZone" : "us-east-1c",
            "CidrBlock" : "10.0.2.0/24",
            "VpcId" : {
               "Ref" : "VPC"
            }
         }
      },
      "VPC" : {
         "Properties" : {
            "CidrBlock" : "10.0.0.0/16",
            "EnableDnsSupport" : "true",
            "EnableDnsHostnames" : "true"
         },
         "Type" : "AWS::EC2::VPC"
      },
      "PublicSubnet1b" : {
         "Properties" : {
            "VpcId" : {
               "Ref" : "VPC"
            },
            "CidrBlock" : "10.0.1.0/24",
            "AvailabilityZone" : "us-east-1b"
         },
         "Type" : "AWS::EC2::Subnet"
      },
      "PublicRoute" : {
         "Type" : "AWS::EC2::Route",
         "Properties" : {
            "RouteTableId" : {
               "Ref" : "PublicRouteTable"
            },
            "DestinationCidrBlock" : "0.0.0.0/0",
            "GatewayId" : {
               "Ref" : "InternetGateway"
            }
         },
         "DependsOn" : [
            "VPCGatewayAttachment",
            "InternetGateway",
            "PublicRouteTable"
         ]
      },
      "BastionHostEIP" : {
         "Properties" : {
            "Domain" : "VPC"
         },
         "Type" : "AWS::EC2::EIP"
      },
      "InternetGateway" : {
         "DependsOn" : [
            "VPC",
            "PublicRouteTable"
         ],
         "Type" : "AWS::EC2::InternetGateway"
      },
      "PrivateRoute1b" : {
         "Properties" : {
            "NatGatewayId" : {
               "Ref" : "NatGateway1b"
            },
            "RouteTableId" : {
               "Ref" : "PrivateRouteTable1b"
            },
            "DestinationCidrBlock" : "0.0.0.0/0"
         },
         "DependsOn" : [
            "NatGateway1b",
            "PrivateRouteTable1b"
         ],
         "Type" : "AWS::EC2::Route"
      },
      "BastionSecurityGroup" : {
         "Properties" : {
            "SecurityGroupIngress" : {
               "IpProtocol" : "tcp",
               "FromPort" : "22",
               "ToPort" : "22",
               "CidrIp" : "0.0.0.0/0"
            },
            "VpcId" : {
               "Ref" : "VPC"
            },
            "GroupDescription" : "Allow SSH traffic to bastion host",
            "SecurityGroupEgress" : {
               "FromPort" : "22",
               "IpProtocol" : "tcp",
               "ToPort" : "22",
               "CidrIp" : "0.0.0.0/0"
            }
         },
         "Type" : "AWS::EC2::SecurityGroup"
      },
      "PrivateRoute1c" : {
         "Properties" : {
            "DestinationCidrBlock" : "0.0.0.0/0",
            "NatGatewayId" : {
               "Ref" : "NatGateway1c"
            },
            "RouteTableId" : {
               "Ref" : "PrivateRouteTable1c"
            }
         },
         "DependsOn" : [
            "NatGateway1c",
            "PrivateRouteTable1c"
         ],
         "Type" : "AWS::EC2::Route"
      },
      "PublicRouteTable" : {
         "Type" : "AWS::EC2::RouteTable",
         "DependsOn" : "VPC",
         "Properties" : {
            "VpcId" : {
               "Ref" : "VPC"
            }
         }
      },
      "NatEip1b" : {
         "Properties" : {
            "Domain" : "VPC"
         },
         "Type" : "AWS::EC2::EIP"
      },
      "NatEip1c" : {
         "Properties" : {
            "Domain" : "VPC"
         },
         "Type" : "AWS::EC2::EIP"
      },
      "PublicSubnetRouteTableAssociation1c" : {
         "Type" : "AWS::EC2::SubnetRouteTableAssociation",
         "Properties" : {
            "SubnetId" : {
               "Ref" : "PublicSubnet1c"
            },
            "RouteTableId" : {
               "Ref" : "PublicRouteTable"
            }
         }
      },
      "NatGateway1b" : {
         "Properties" : {
            "SubnetId" : {
               "Ref" : "PublicSubnet1b"
            },
            "AllocationId" : {
               "Fn::GetAtt" : [
                  "NatEip1b",
                  "AllocationId"
               ]
            }
         },
         "Type" : "AWS::EC2::NatGateway"
      },
      "PrivateSubnetRouteTableAssociation1b" : {
         "Properties" : {
            "SubnetId" : {
               "Ref" : "PrivateSubnet1b"
            },
            "RouteTableId" : {
               "Ref" : "PrivateRouteTable1b"
            }
         },
         "Type" : "AWS::EC2::SubnetRouteTableAssociation"
      },
      "VPCGatewayAttachment" : {
         "Type" : "AWS::EC2::VPCGatewayAttachment",
         "DependsOn" : [
            "VPC",
            "InternetGateway"
         ],
         "Properties" : {
            "InternetGatewayId" : {
               "Ref" : "InternetGateway"
            },
            "VpcId" : {
               "Ref" : "VPC"
            }
         }
      },
      "PublicSubnet1c" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "CidrBlock" : "10.0.3.0/24",
            "VpcId" : {
               "Ref" : "VPC"
            },
            "AvailabilityZone" : "us-east-1c"
         }
      },
      "PrivateSubnet1b" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "AvailabilityZone" : "us-east-1b",
            "CidrBlock" : "10.0.0.0/24",
            "VpcId" : {
               "Ref" : "VPC"
            }
         }
      },
      "PrivateRouteTable1c" : {
         "Type" : "AWS::EC2::RouteTable",
         "Properties" : {
            "VpcId" : {
               "Ref" : "VPC"
            }
         }
      },
      "PublicSubnetRouteTableAssociation1b" : {
         "Properties" : {
            "RouteTableId" : {
               "Ref" : "PublicRouteTable"
            },
            "SubnetId" : {
               "Ref" : "PublicSubnet1b"
            }
         },
         "Type" : "AWS::EC2::SubnetRouteTableAssociation"
      },
      "BastionHost" : {
         "Properties" : {
            "SecurityGroupIds" : [
               {
                  "Ref" : "BastionSecurityGroup"
               }
            ],
            "KeyName" : {
               "Ref" : "KeyName"
            },
            "InstanceType" : "t2.micro",
            "SubnetId" : {
               "Ref" : "PublicSubnet1b"
            },
            "ImageId" : "ami-6869aa05"
         },
         "Type" : "AWS::EC2::Instance"
      },
      "NatGateway1c" : {
         "Type" : "AWS::EC2::NatGateway",
         "Properties" : {
            "SubnetId" : {
               "Ref" : "PublicSubnet1c"
            },
            "AllocationId" : {
               "Fn::GetAtt" : [
                  "NatEip1c",
                  "AllocationId"
               ]
            }
         }
      },
      "SecurityGroup" : {
         "Type" : "AWS::EC2::SecurityGroup",
         "Properties" : {
            "GroupDescription" : "App Server Security Group",
            "SecurityGroupIngress" : [
               {
                  "FromPort" : "22",
                  "IpProtocol" : "tcp",
                  "ToPort" : "22",
                  "CidrIp" : "10.0.0.0/16"
               },
               {
                  "IpProtocol" : "tcp",
                  "FromPort" : "5432",
                  "CidrIp" : "10.0.0.0/16",
                  "ToPort" : "5432"
               },
               {
                  "CidrIp" : "10.0.0.0/16",
                  "ToPort" : "80",
                  "FromPort" : "80",
                  "IpProtocol" : "tcp"
               },
               {
                  "FromPort" : "6379",
                  "IpProtocol" : "tcp",
                  "ToPort" : "6379",
                  "CidrIp" : "10.0.0.0/16"
               }
            ],
            "VpcId" : {
               "Ref" : "VPC"
            }
         }
      },
      "BastionHostEIPAssociation" : {
         "Type" : "AWS::EC2::EIPAssociation",
         "DependsOn" : [
            "BastionHostEIP",
            "BastionHost"
         ],
         "Properties" : {
            "AllocationId" : {
               "Fn::GetAtt" : [
                  "BastionHostEIP",
                  "AllocationId"
               ]
            },
            "InstanceId" : {
               "Ref" : "BastionHost"
            }
         }
      },
      "PrivateRouteTable1b" : {
         "Type" : "AWS::EC2::RouteTable",
         "Properties" : {
            "VpcId" : {
               "Ref" : "VPC"
            }
         }
      },
      "PrivateSubnetRouteTableAssociation1c" : {
         "Properties" : {
            "SubnetId" : {
               "Ref" : "PrivateSubnet1c"
            },
            "RouteTableId" : {
               "Ref" : "PrivateRouteTable1c"
            }
         },
         "Type" : "AWS::EC2::SubnetRouteTableAssociation"
      }
   },
   "Parameters" : {
      "KeyName" : {
         "Type" : "AWS::EC2::KeyPair::KeyName",
         "ConstraintDescription" : "Must be a valid keyname"
      }
   },
   "Outputs" : {
      "PrivateSubnet1b" : {
         "Description" : "Private EC2 Instance Subnet 1",
         "Value" : {
            "Ref" : "PrivateSubnet1b"
         }
      },
      "PublicSubnet1c" : {
         "Value" : {
            "Ref" : "PublicSubnet1c"
         },
         "Description" : "Public EC2 Instance Subnet 2"
      },
      "PublicSubnet1b" : {
         "Value" : {
            "Ref" : "PublicSubnet1b"
         },
         "Description" : "Public ELB Subnet 1"
      },
      "KeyName" : {
         "Description" : "EC2 Keyname to Access Bastion Host",
         "Value" : {
            "Ref" : "KeyName"
         }
      },
      "VPC" : {
         "Value" : {
            "Ref" : "VPC"
         },
         "Description" : "VPC id"
      },
      "PrivateSubnet1c" : {
         "Value" : {
            "Ref" : "PrivateSubnet1c"
         },
         "Description" : "Private EC2 Instance Subnet 2"
      },
      "SecurityGroupId" : {
         "Description" : "Main VPC Security Group id",
         "Value" : {
            "Ref" : "SecurityGroup"
         }
      },
      "BastionHostEIP" : {
         "Value" : {
            "Ref" : "BastionHostEIP"
         },
         "Description" : "Bastion Host IP Address"
      }
   },
   "AWSTemplateFormatVersion" : "2010-09-09"
}
